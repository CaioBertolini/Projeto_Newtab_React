{"version":3,"sources":["components/user.jsx","index.js"],"names":["User","useState","usuario","setUsuario","axios","get","then","res","person","data","cards","card_number","cvv","expiry_date","payIsOpen","setPayIsOpen","listTransp","setListTrasnp","payName","setPayName","resulOpen","setResulOpen","negativeOpen","setNegativeOpen","valueCards","setValueCards","map","item","className","style","display","src","img","alt","name","id","username","onClick","type","placeholder","required","value","onChange","event","target","substr","rootComponet","document","getElementById","ReactDOM","render"],"mappings":"wNAIe,SAASA,IAGpB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACAC,IAAMC,IAAN,oDACGC,MAAK,SAAAC,GACJ,IAAMC,EAASD,EAAIE,KACnBN,EAAWK,MAIf,IAAIE,EAAQ,CAER,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAUnB,MAAkCZ,mBAAS,QAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAoCd,mBAAS,QAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA8BhB,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAAkClB,mBAAS,QAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAAwCpB,mBAAS,IAAjD,mBAAOqB,EAAP,KAAqBC,EAArB,KACA,EAAoCtB,mBAAS,GAA7C,mBAAOuB,EAAP,KAAmBC,EAAnB,KA0BA,OACI,qCAEKvB,EAAQwB,KAAI,SAACC,GAAD,OACT,sBAAKC,UAAU,WAAWC,MAAO,CAACC,QAAQd,GAA1C,UACI,qBAAKY,UAAU,cAAf,SACI,qBAAKG,IAAKJ,EAAKK,IAAKC,IAAI,wBAE5B,sBAAKL,UAAU,iBAAf,UACI,yCACWD,EAAKO,QAEhB,uCACSP,EAAKQ,GADd,gBAC+BR,EAAKS,eAGxC,qBAAKR,UAAU,cAAf,SACI,wBAAQS,QAAS,WAxCrC,IAAuBH,IAwCgCP,EAAKO,KAvCxDnB,EAAa,QACbE,EAAc,QACdE,EAAWe,IAqCK,2BAMZ,sBAAKN,UAAU,gBAAgBC,MAAO,CAACC,QAAShB,GAAhD,UACI,mDAAqB,4BAAII,OACzB,uBAAOoB,KAAK,SAASC,YAAY,UAAUC,UAAQ,IACnD,yBAAQC,MAAOjB,EAAYkB,SA9DvC,SAAsBC,GAClBlB,EAAckB,EAAMC,OAAOH,QA6DnB,UACI,yBAAQA,MAAM,IAAd,iCAAoC/B,EAAM,GAAGC,YAAYkC,QAAQ,MACjE,yBAAQJ,MAAM,IAAd,iCAAoC/B,EAAM,GAAGC,YAAYkC,QAAQ,SAErE,wBAAQR,QAAS,WA5CrBd,EADU,IA6CgCC,EA5C1B,GAEA,UAEpBT,EAAa,QACbM,EAAa,SAuCL,sBAIJ,sBAAKO,UAAU,gBAAgBC,MAAO,CAACC,QAASV,GAAhD,UACI,uDACA,+CAAiB,iCAASE,IAA1B,gCACA,wBAAQe,QAAS,WAzCzBhB,EAAa,QACbJ,EAAc,SAwCN,0BCpGhB,IAAM6B,EAAeC,SAASC,eAAe,QAE7CC,IAASC,OACD,8BACI,cAAClD,EAAD,MAEV8C,K","file":"static/js/main.8060ee7b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport \"./css/user.css\";\n\nexport default function User(){\n\n    // Consumo da API para listar usuários\n    const [usuario, setUsuario] = useState([]);\n    axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\n      .then(res => {\n        const person = res.data;\n        setUsuario(person);\n    })\n\n    // Lista dos cartões\n    let cards = [\n        // cartão valido\n        {\n          card_number: '1111111111111111',\n          cvv: 789,\n          expiry_date: '01/18',\n        },\n        // cartão invalido\n        {\n          card_number: '4111111111111234',\n          cvv: 123,\n          expiry_date: '01/20',\n        },\n      ];\n    \n    // Função para detectar modificação e resgatar valor no selection\n    function handleChange(event){\n        setValueCards(event.target.value);\n    }\n\n    // Constante de ação dos modals\n    const [payIsOpen, setPayIsOpen] = useState(\"none\"); // Constante para abrir pagamento\n    const [listTransp, setListTrasnp] = useState(\"flex\"); // Constante para esconder lista\n    const [payName, setPayName] = useState(\"\"); // Constante para pegar nome usuário\n    const [resulOpen, setResulOpen] = useState(\"none\"); // Constante para abrir recebimento\n    const [negativeOpen, setNegativeOpen] = useState(\"\"); // Constante para mostrar o não do recebimento\n    const [valueCards, setValueCards] = useState(1); // Constante para valor do selection\n\n    // Abrir o modal de pagameto\n    function modalPayOpen (name) {\n        setPayIsOpen(\"flex\")\n        setListTrasnp(\"none\")\n        setPayName(name)\n    }\n\n    // Abrir o modal de recibo de pagamento\n    function modalResulOpen (value){\n        if (value === 1){\n            setNegativeOpen(\"\")\n        } else{\n            setNegativeOpen(\"não\")\n        }\n        setPayIsOpen(\"none\")\n        setResulOpen(\"flex\")\n    }\n    \n    // Fechamento do modal de recibo de pagamento\n    function modalResulClose () {\n        setResulOpen(\"none\")\n        setListTrasnp(\"flex\")\n    }\n\n    return(\n        <>\n            {/* Listagem de usuários */}\n            {usuario.map((item) =>\n                <div className=\"usuarios\" style={{display:listTransp}}>\n                    <div className=\"img-usuario\">\n                        <img src={item.img} alt=\"Imagem usuário\"/>\n                    </div>\n                    <div className=\"identi-usuario\">\n                        <div>\n                            Nome: {item.name}\n                        </div>\n                        <div>\n                            ID: {item.id} - Username: {item.username}\n                        </div>\n                    </div>\n                    <div className=\"botao-pagar\">\n                        <button onClick={()=>{modalPayOpen(item.name)}}>Pagar</button>\n                    </div>\n                </div>\n            )}\n            \n            {/* Modal de pagamaneto */}\n            <div className=\"modal-showing\" style={{display: payIsOpen}}>\n                <span>Pagamento para <b>{payName}</b></span>\n                <input type=\"number\" placeholder=\"R$ 0,00\" required/>\n                <select value={valueCards} onChange={handleChange}>\n                    <option value=\"1\">Cartão com final {cards[0].card_number.substr(-4)}</option>\n                    <option value=\"2\">Cartão com final {cards[1].card_number.substr(-4)}</option>\n                </select>\n                <button onClick={()=>{modalResulOpen (valueCards)}}>Pagar</button>\n            </div>\n\n            {/* Modal de recibo de pagamento */}\n            <div className=\"modal-showing\" style={{display: resulOpen}}>\n                <span>Recibo de pagamento</span>\n                <div>O Pagamento <strong>{negativeOpen}</strong> foi concluido com sucesso</div>\n                <button onClick={()=>{modalResulClose()}}>Fechar</button>\n            </div>\n        </>\n    )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport User from \"./components/user\"\n\nconst rootComponet = document.getElementById(\"root\")\n\nReactDOM.render(\n        <div>\n            <User/>\n        </div>\n, rootComponet)\n\n"],"sourceRoot":""}